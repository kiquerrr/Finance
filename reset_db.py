# reset_db.py
# -*- coding: utf-8 -*-
import os
import sqlite3
import database # Importamos tu m√≥dulo para reusar la funci√≥n de creaci√≥n

DB_FILE = "arbitraje.db"

def reset_database():
    """
    Script de alto riesgo para eliminar y recrear la base de datos.
    Pide una confirmaci√≥n expl√≠cita para evitar ejecuciones accidentales.
    """
    print("=" * 60)
    print("‚ö†Ô∏è  ¬°ADVERTENCIA DE ACCI√ìN DESTRUCTIVA! ‚ö†Ô∏è")
    print("=" * 60)
    print(f"Est√°s a punto de BORRAR COMPLETAMENTE la base de datos '{DB_FILE}'.")
    print("TODA la informaci√≥n de ciclos, transacciones y configuraci√≥n se perder√°.")
    print("Esta acci√≥n es IRREVERSIBLE.")
    print("-" * 60)
    
    confirmacion = input("Para continuar, escribe la palabra 'RESET' en may√∫sculas: ")
    
    if confirmacion == "RESET":
        print(f"\nConfirmaci√≥n aceptada. Procediendo a reiniciar '{DB_FILE}'...")
        try:
            # 1. Eliminar el archivo de la base de datos si existe
            if os.path.exists(DB_FILE):
                os.remove(DB_FILE)
                print(f"‚úÖ Archivo '{DB_FILE}' eliminado.")
            
            # 2. Llamar a la funci√≥n de creaci√≥n para generar una base limpia
            print("‚ñ∂Ô∏è  Creando una nueva base de datos desde cero...")
            database.crear_base_de_datos() # Reutilizamos tu c√≥digo para crearla
            
            print("\n" + "=" * 60)
            print("üéâ ¬°REINICIO COMPLETADO!")
            print("La base de datos est√° limpia y lista para un nuevo comienzo.")
            print("=" * 60)

        except Exception as e:
            print(f"\n‚ùå Ocurri√≥ un error durante el reinicio: {e}")
    else:
        print("\n‚ùå Confirmaci√≥n incorrecta. El reinicio ha sido CANCELADO.")
        print("La base de datos no ha sido modificada.")

if __name__ == '__main__':
    reset_database()
